#  Copyright (c) 2021 Uber Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This code was @generated by Uber Poet, a mock application generator.
# Check it out at https://github.com/uber/uber-poet

# Description:
#   Repository-wide definitions for the seller/register bazel build system.
#
#   WORKSPACE defines the root of a bazel environment, and contains infrastructural rules that
#   further define the workspace environment.  Any "repositories" need to be defined here, so here
#   we import all the other bazel projects we consume (mostly skylark libraries or custom bazel
#   rules), the core statements that do the fetching of maven artifacts when required, etc.
#
#   Rules invoked from the WORKSPACE will only ever be run during the configuration of this bazel
#   workspace, and this configuration is cached until invalidated (e.g. bumping a version number,
#   or adding a dep, or changing the set of bazel rules we consume).  This is the only place where
#   bazel permits dynamism based on environment, as it locks down the sandboxes in which each
#   build tool executes during the normal build phase.
#
#   Specific configuration values have been extracted to make this file a bit more terese, primarily
#   versions.bzl which contains globals and environment-wide version numbers shared by everyone,
#   and third_party/maven_artifacts.bzl which define any maven artifacts and thier versions that
#   will be available to bazel targets (see third_party/MAVEN.md for more details).
#
#   Custom rule definitions not imported externally are defined in //third_party/tools/build_defs,
#   and other useful bazel tooling will be found in //tools subpackages.

# Load global values (mostly version numbers) used in the WORKSPACE.
# load(
#     "//:workspace_versions.bzl",
#     "RULES_APPLE_VERSION",
# )

workspace(name = "App")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "build_bazel_rules_apple",
    sha256 = "77e8bf6fda706f420a55874ae6ee4df0c9d95da6c7838228b26910fc82eea5a2",
    url = "https://github.com/bazelbuild/rules_apple/releases/download/0.32.0/rules_apple.0.32.0.tar.gz",
)

load(
    "@build_bazel_rules_apple//apple:repositories.bzl",
    "apple_rules_dependencies",
)

apple_rules_dependencies()

load(
    "@build_bazel_rules_swift//swift:repositories.bzl",
    "swift_rules_dependencies",
)

swift_rules_dependencies()

load(
    "@build_bazel_rules_swift//swift:extras.bzl",
    "swift_rules_extra_dependencies",
)

swift_rules_extra_dependencies()

load(
    "@build_bazel_apple_support//lib:repositories.bzl",
    "apple_support_dependencies",
)

apple_support_dependencies()

load(
    "@bazel_skylib//:workspace.bzl",
    "bazel_skylib_workspace",
)

bazel_skylib_workspace()
